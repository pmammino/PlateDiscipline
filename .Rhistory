group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = mean(swing),
OOZ.xSwing = mean(predict)) %>%
filter(OOZ.Pitchers >= 500)
in_zone_data <- in_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(IZ.Pitches = n(),
IZ.Swing = mean(swing),
IZ.xSwing = mean(predict)) %>%
filter(IZ.Pitches >= 500)
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = mean(swing),
OOZ.xSwing = mean(predict)) %>%
filter(OOZ.Pitches >= 500)
View(in_zone_data)
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = mean(swing),
OOZ.xSwing = mean(predict)) %>%
filter(OOZ.Pitches >= 300)
pitchers_2019 <- left_join(in_zone_data,out_of_zone_data, by = "pitcher")
View(pitchers_2019)
pitchers_2019 <- [,c(1,2,3,4,5,7,8,9)]
pitchers_2019 <- pitchers_2019[,c(1,2,3,4,5,7,8,9)]
colnames(pitchers_2019)
colnames(pitchers_2019) <- c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","OOZ.Pitches","OOZ.Swing","OOZ.xSwing")
pitchers_2019 <- left_join(pitchers_2019,all_results,by = "player_id")
pitchers_2019$PD <- round(-1*pitchers_2019$IZ + pitchers_2019$OOZ,5)
complete.cases(pitchers_2019)
pitchers_2019 <- pitchers_2019[complete.cases(pitchers_2019),]
View(pitchers_2019)
pitchers_2019 <- pitchers_2019[,c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
in_zone_data <- in_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(IZ.Pitches = n(),
IZ.Swing = round(mean(swing),5),
IZ.xSwing = round(mean(predict),5)) %>%
filter(IZ.Pitches >= 500)
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = round(mean(swing),5),
OOZ.xSwing = round(mean(predict)),5) %>%
filter(OOZ.Pitches >= 300)
pitchers_2019 <- left_join(in_zone_data,out_of_zone_data, by = "pitcher")
pitchers_2019 <- pitchers_2019[,c(1,2,3,4,5,7,8,9)]
colnames(pitchers_2019) <- c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","OOZ.Pitches","OOZ.Swing","OOZ.xSwing")
pitchers_2019 <- left_join(pitchers_2019,all_results,by = "player_id")
pitchers_2019$PD <- round(-1*pitchers_2019$IZ + pitchers_2019$OOZ,5)
pitchers_2019$IZ <- round(pitchers_2019$IZ,5)
pitchers_2019$OOZ <- round(pitchers_2019$OOZ,5)
pitchers_2019 <- pitchers_2019[complete.cases(pitchers_2019),]
pitchers_2019 <- pitchers_2019[,c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = round(mean(swing),5),
OOZ.xSwing = round(mean(predict),5)) %>%
filter(OOZ.Pitches >= 300)
pitchers_2019 <- left_join(in_zone_data,out_of_zone_data, by = "pitcher")
pitchers_2019 <- pitchers_2019[,c(1,2,3,4,5,7,8,9)]
colnames(pitchers_2019) <- c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","OOZ.Pitches","OOZ.Swing","OOZ.xSwing")
pitchers_2019 <- left_join(pitchers_2019,all_results,by = "player_id")
pitchers_2019$PD <- round(-1*pitchers_2019$IZ + pitchers_2019$OOZ,5)
pitchers_2019$IZ <- round(pitchers_2019$IZ,5)
pitchers_2019$OOZ <- round(pitchers_2019$OOZ,5)
pitchers_2019 <- pitchers_2019[complete.cases(pitchers_2019),]
pitchers_2019 <- pitchers_2019[,c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
pitchers_2019 <- pitchers_2019[,c("player_name","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
setwd("~/GitHub/plate_discipline")
saveRDS(pitchers_2019, file = "pitchers_2019.rds")
fg_2019 <- read.csv("pitchers_2019.csv")
master <- read.csv("master.csv")
View(master)
pitchers_2019 <- left_join(pitchers_2019,master[,c("mlb_id","fg_id")],by.x = "player_id", by.y = "mlb_id")
pitchers_2019 <- left_join(pitchers_2019,master[,c("mlb_id","fg_id")],by = c("player_id"= "mlb_id"))
View(pitchers_2019)
pitchers_2019 <- pitchers_2019[,c("player_name","fg_id","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
View(pitchers_2019)
fg_2019 <- read.csv("fg_2019.csv")
View(fg_2019)
fg_2019 <- fg_2019[,c("playerid","K.","BB.", "SwStr.")]
pitchers_2019 <- left_join(pitchers_2019,fg_2019, by = c("fg_id" = "playerid"))
pitchers_2019$fg_id <- as.numeric(pitchers_2019$fg_id)
pitchers_2019 <- left_join(pitchers_2019,fg_2019, by = c("fg_id" = "playerid"))
View(pitchers_2019)
master <- read.csv("master.csv")
pitchers_2019 <- left_join(pitchers_2019,master[,c("mlb_id","fg_id")],by = c("player_id"= "mlb_id"))
in_zone_data <- in_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(IZ.Pitches = n(),
IZ.Swing = round(mean(swing),5),
IZ.xSwing = round(mean(predict),5)) %>%
filter(IZ.Pitches >= 500)
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = round(mean(swing),5),
OOZ.xSwing = round(mean(predict),5)) %>%
filter(OOZ.Pitches >= 300)
pitchers_2019 <- left_join(in_zone_data,out_of_zone_data, by = "pitcher")
pitchers_2019 <- pitchers_2019[,c(1,2,3,4,5,7,8,9)]
colnames(pitchers_2019) <- c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","OOZ.Pitches","OOZ.Swing","OOZ.xSwing")
pitchers_2019 <- left_join(pitchers_2019,all_results,by = "player_id")
pitchers_2019$PD <- round(-1*pitchers_2019$IZ + pitchers_2019$OOZ,5)
pitchers_2019$IZ <- round(pitchers_2019$IZ,5)
pitchers_2019$OOZ <- round(pitchers_2019$OOZ,5)
pitchers_2019 <- pitchers_2019[complete.cases(pitchers_2019),]
pitchers_2019 <- pitchers_2019[,c("player_name","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
saveRDS(pitchers_2019, file = "pitchers_2019.rds")
master <- read.csv("master.csv")
fg_2019 <- read.csv("fg_2019.csv")
fg_2019 <- fg_2019[,c("playerid","K.","BB.", "SwStr.")]
pitchers_2019 <- left_join(pitchers_2019,master[,c("mlb_id","fg_id")],by = c("player_id"= "mlb_id"))
pitchers_2019 <- pitchers_2019[,c("player_name","fg_id","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
pitchers_2019$fg_id <- as.numeric(as.character(pitchers_2019$fg_id))
pitchers_2019 <- left_join(pitchers_2019,fg_2019, by = c("fg_id" = "playerid"))
pitchers_2019$K. = as.numeric(gsub("[\\%,]", "", pitchers_2019$K.))
pitchers_2019$BB. = as.numeric(gsub("[\\%,]", "", pitchers_2019$BB.))
pitchers_2019$SwStr. = as.numeric(gsub("[\\%,]", "", pitchers_2019$SwStr.))
cor(pitchers_2019$PD,pitchers_2019$K.)
cor(pitchers_2019$PD,pitchers_2019$BB.)
cor(pitchers_2019$PD,pitchers_2019$SwStr.)
cor(pitchers_2019$IZ,pitchers_2019$K.)
cor(pitchers_2019$OOZ,pitchers_2019$K.)
cor(pitchers_2019$OOZ,pitchers_2019$BB.)
cor(pitchers_2019$IZ,pitchers_2019$BB.)
cor(pitchers_2019$OOZ.Swing,pitchers_2019$K.)
cor(pitchers_2019$OOZ.Swing,pitchers_2019$BB.)
cor(pitchers_2019$OOZ.xSwing,pitchers_2019$BB.)
unique(all_data$description)
bip <- all_data %>%
filter(description == c("hit_into_play", "hit_into_play_no_out", "hit_into_play_score"))
bip <- all_data %>%
filter(description == "hit_into_play" |description == "hit_into_play_no_out" | description == "hit_into_play_score")
bip <- all_pitches %>%
filter(description == "hit_into_play" |description == "hit_into_play_no_out" | description == "hit_into_play_score")
bip <- bip[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z",
"woba_value",
"woba_denom")]
View(bip)
install.packages("GauPro")
library(GauPro)
gp <- GauPro(bip$plate_x, bip$plate_z, parallel=FALSE)
swings <- all_pitches %>%
filter(description == "hit_into_play" |
description == "hit_into_play_no_out" |
description == "hit_into_play_score" |
description == "foul" |
description == "swinging_strike" |
description == "foul_tip" |
description == "swinging_strike_blocked")
swings <- mutate(swings, whiff=ifelse(description %in% c("swinging_strike","swinging_strike_blocked"),
1, 0))
swings <- swings[!(is.na(swings$plate_x)) | !(is.na(swings$plate_z)) | !(is.na(swings$pitch_type)),]
swings <- mutate(swings, pitch_group=ifelse(pitch_type %in% c("FF", "FT","FC", "SI"),
"Fastball", ifelse(pitch_type %in% c("SL", "EP","CU", "KN", "KC"),
"Breaking", "OffSpeed")))
swings$count <- paste(swings$balls,"-",swings$strikes)
all_splits_swings <- split(swings, with(swings, interaction(pitch_group,count)), drop = TRUE)
all_predict_swings <- all_splits_swings[FALSE,]
all_predict_swings$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_swings[[x]]) > 100)
{
fit <- gam(swing ~ s(plate_x,plate_z), family=binomial, data=all_splits_swings[[x]])
all_splits_swings[[x]]$predict <- exp(predict(fit,all_splits_swings[[x]]))/(1 + exp(predict(fit,all_splits_swings[[x]])))
all_predict_swings <- rbind(all_predict_swings,all_splits_swings[[x]])
}
}
swings_data <- lapply(1:length(all_splits_swings), predict_whiff)
swings_data <- do.call("rbind", swings_data)
all_predict_swings <- swings[FALSE,]
all_predict_swings$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_swings[[x]]) > 100)
{
fit <- gam(swing ~ s(plate_x,plate_z), family=binomial, data=all_splits_swings[[x]])
all_splits_swings[[x]]$predict <- exp(predict(fit,all_splits_swings[[x]]))/(1 + exp(predict(fit,all_splits_swings[[x]])))
all_predict_swings <- rbind(all_predict_swings,all_splits_swings[[x]])
}
}
swings_data <- lapply(1:length(all_splits_swings), predict_whiff)
swings_data <- do.call("rbind", swings_data)
all_predict_swings <- swings[FALSE,]
all_predict_swings$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_swings[[x]]) > 100)
{
fit <- gam(whiff ~ s(plate_x,plate_z), family=binomial, data=all_splits_swings[[x]])
all_splits_swings[[x]]$predict <- exp(predict(fit,all_splits_swings[[x]]))/(1 + exp(predict(fit,all_splits_swings[[x]])))
all_predict_swings <- rbind(all_predict_swings,all_splits_swings[[x]])
}
}
swings_data <- lapply(1:length(all_splits_swings), predict_whiff)
swings_data <- do.call("rbind", swings_data)
View(swings_data)
View(swings_data)
swings_data <- swings_data[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z",
"whiff",
"predict")]
View(swings_data)
View(swings)
swings <- all_pitches %>%
filter(description == "hit_into_play" |
description == "hit_into_play_no_out" |
description == "hit_into_play_score" |
description == "foul" |
description == "swinging_strike" |
description == "foul_tip" |
description == "swinging_strike_blocked")
swings <- swings[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z")]
swings <- mutate(swings, whiff=ifelse(description %in% c("swinging_strike","swinging_strike_blocked"),
1, 0))
swings <- swings[!(is.na(swings$plate_x)) | !(is.na(swings$plate_z)) | !(is.na(swings$pitch_type)),]
swings <- mutate(swings, pitch_group=ifelse(pitch_type %in% c("FF", "FT","FC", "SI"),
"Fastball", ifelse(pitch_type %in% c("SL", "EP","CU", "KN", "KC"),
"Breaking", "OffSpeed")))
swings$count <- paste(swings$balls,"-",swings$strikes)
all_splits_swings <- split(swings, with(swings, interaction(pitch_group,count)), drop = TRUE)
all_predict_swings <- swings[FALSE,]
all_predict_swings$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_swings[[x]]) > 100)
{
fit <- gam(whiff ~ s(plate_x,plate_z), family=binomial, data=all_splits_swings[[x]])
all_splits_swings[[x]]$predict <- exp(predict(fit,all_splits_swings[[x]]))/(1 + exp(predict(fit,all_splits_swings[[x]])))
all_predict_swings <- rbind(all_predict_swings,all_splits_swings[[x]])
}
}
swings_data <- lapply(1:length(all_splits_swings), predict_whiff)
swings_data <- do.call("rbind", swings_data)
whiff_predict <- all_pitches[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z")]
whiff_predict <- mutate(whiff_predict, whiff=ifelse(description %in% c("swinging_strike","swinging_strike_blocked"),
1, 0))
whiff_predict <- whiff_predict[!(is.na(whiff_predict$plate_x)) | !(is.na(whiff_predict$plate_z)) | !(is.na(whiff_predict$pitch_type)),]
whiff_predict <- mutate(whiff_predict, pitch_group=ifelse(pitch_type %in% c("FF", "FT","FC", "SI"),
"Fastball", ifelse(pitch_type %in% c("SL", "EP","CU", "KN", "KC"),
"Breaking", "OffSpeed")))
whiff_predict$count <- paste(whiff_predict$balls,"-",whiff_predict$strikes)
all_splits_whiff_predict <- split(whiff_predict, with(whiff_predict, interaction(pitch_group,count)), drop = TRUE)
all_predict_whiff_predict <- whiff_predict[FALSE,]
all_predict_whiff_predict$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_whiff_predict[[x]]) > 100)
{
fit <- gam(whiff ~ s(plate_x,plate_z), family=binomial, data=all_splits_whiff_predict[[x]])
all_splits_whiff_predict[[x]]$predict <- exp(predict(fit,all_splits_whiff_predict[[x]]))/(1 + exp(predict(fit,all_splits_whiff_predict[[x]])))
all_predict_whiff_predict <- rbind(all_predict_whiff_predict,all_splits_whiff_predict[[x]])
}
}
whiff_predict_data <- lapply(1:length(all_splits_whiff_predict), predict_whiff)
whiff_predict_data <- do.call("rbind", whiff_predict_data)
View(whiff_predict_data)
model_whiff <- lmer(whiff ~ predict + (1|pitcher) + (1|batter),
data = whiff_predict_data)
whiff_pitchers <- data.frame(ranef(model_whiff)$pitcher)
colnames(whiff_pitchers) <- "xWhiff"
View(whiff_pitchers)
whiff_data <- whiff_predict_data %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(Pitches = n(),
Whiff = round(mean(whiff),5),
xWhiff = round(mean(predict),5)) %>%
filter(Pitches >= 750)
View(whiff_pitchers)
View(whiff_data)
View(whiff_predict_data)
View(whiff_predict)
whiff_predict <- whiff_predict[!(is.na(whiff_predict$plate_x)) | !(is.na(whiff_predict$plate_z)) | !(is.na(whiff_predict$pitch_type)),]
View(all_pitches_trim)
all_pitches_trim <- all_pitches_trim[!(is.na(all_pitches_trim$plate_x)) | !(is.na(all_pitches_trim$plate_z)),]
all_pitches_trim <- all_pitches_trim[!(is.na(all_pitches_trim$pitch_type)),]
all_pitches <- all_pitches %>% distinct()
all_pitches_trim <- all_pitches[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z",
"fielder_2",
"woba_value")]
all_pitches_trim <- mutate(all_pitches_trim, swing=ifelse(description %in% c("hit_into_play", "foul","swinging_strike", "hit_into_play_score", "hit_into_play_no_out", "foul_tip", "swinging_strike_blocked"),
1, 0))
all_pitches_trim <- all_pitches_trim[!(is.na(all_pitches_trim$plate_x)) | !(is.na(all_pitches_trim$plate_z)),]
all_pitches_trim <- all_pitches_trim[!(is.na(all_pitches_trim$pitch_type)),]
all_pitches_trim <- mutate(all_pitches_trim, pitch_group=ifelse(pitch_type %in% c("FF", "FT","FC", "SI"),
"Fastball", ifelse(pitch_type %in% c("SL", "EP","CU", "KN", "KC"),
"Breaking", "OffSpeed")))
all_pitches_trim$count <- paste(all_pitches_trim$balls,"-",all_pitches_trim$strikes)
all_splits <- split(all_pitches_trim, with(all_pitches_trim, interaction(pitch_group,count)), drop = TRUE)
list2env(all_splits,envir=.GlobalEnv)
all_predict <- all_pitches_trim[FALSE,]
all_predict$predict <- numeric()
predict_swing <- function(x)
{
if(nrow(all_splits[[x]]) > 100)
{
fit <- gam(swing ~ s(plate_x,plate_z), family=binomial, data=all_splits[[x]])
all_splits[[x]]$predict <- exp(predict(fit,all_splits[[x]]))/(1 + exp(predict(fit,all_splits[[x]])))
all_predict <- rbind(all_predict,all_splits[[x]])
}
}
#fit <- gam(swing ~ s(plate_x,plate_z), family=binomial, data=all_splits[[1]])
# find predicted probabilities over a 50 x 50 grid
# plate_x <- seq(-1.5, 1.5, length.out=100)
# plate_z <- seq(1.4, 3.75, length.out=100)
# data.predict <- data.frame(plate_x = c(outer(plate_x, plate_z * 0 + 1)),
#                            plate_z = c(outer(plate_x * 0 + 1, plate_z)))
# lp <- predict(fit, data.predict)
# data.predict$Probability <- exp(lp) / (1 + exp(lp))
#
# ggplot(kZone, aes(x, y)) +
#   geom_tile(data=data.predict,
#             aes(x=plate_x, y=plate_z, fill= Probability)) +
#   scale_fill_distiller(palette = "Spectral") +
#   geom_path(lwd=1.5, col="black") +
#   coord_fixed()+labs(title="Swing Rates")
#
# all_splits[[1]]$predict <- exp(predict(fit,all_splits[[1]]))/(1 + exp(predict(fit,all_splits[[1]])))
#
# all_predict <- rbind(all_predict,all_splits[[1]])
all_data <- lapply(1:length(all_splits), predict_swing)
all_data <- do.call("rbind", all_data)
in_zone <- all_data %>% filter(zone == 1 | zone == 2 | zone == 3 | zone == 4 | zone == 5 | zone == 6 | zone == 7 | zone == 8 |zone == 9)
out_of_zone <- all_data %>% filter(zone == 10 | zone == 11 | zone == 12 | zone == 13)
model_zone <- lmer(swing ~ predict + (1|pitcher) + (1|batter),
data = in_zone)
model_out_of_zone <- lmer(swing ~ predict + (1|pitcher) + (1|batter),
data = out_of_zone)
out_of_zone_pitchers <- data.frame(ranef(model_out_of_zone)$pitcher)
colnames(out_of_zone_pitchers) <- "OOZ"
in_zone_pitchers <- data.frame(ranef(model_zone)$pitcher)
colnames(in_zone_pitchers) <- "IZ"
all_results <- merge(in_zone_pitchers,out_of_zone_pitchers,by = "row.names")
colnames(all_results) <- c("player_id","IZ","OOZ")
all_results$player_id <- as.numeric(all_results$player_id)
in_zone_data <- in_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(IZ.Pitches = n(),
IZ.Swing = round(mean(swing),5),
IZ.xSwing = round(mean(predict),5)) %>%
filter(IZ.Pitches >= 500)
out_of_zone_data <- out_of_zone %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(OOZ.Pitches = n(),
OOZ.Swing = round(mean(swing),5),
OOZ.xSwing = round(mean(predict),5)) %>%
filter(OOZ.Pitches >= 300)
pitchers_2019 <- left_join(in_zone_data,out_of_zone_data, by = "pitcher")
pitchers_2019 <- pitchers_2019[,c(1,2,3,4,5,7,8,9)]
colnames(pitchers_2019) <- c("player_id","player_name","IZ.Pitches","IZ.Swing","IZ.xSwing","OOZ.Pitches","OOZ.Swing","OOZ.xSwing")
pitchers_2019 <- left_join(pitchers_2019,all_results,by = "player_id")
pitchers_2019$PD <- round(-1*pitchers_2019$IZ + pitchers_2019$OOZ,5)
pitchers_2019$IZ <- round(pitchers_2019$IZ,5)
pitchers_2019$OOZ <- round(pitchers_2019$OOZ,5)
pitchers_2019 <- pitchers_2019[complete.cases(pitchers_2019),]
pitchers_2019 <- pitchers_2019[,c("player_name","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
saveRDS(pitchers_2019, file = "pitchers_2019.rds")
master <- read.csv("master.csv")
fg_2019 <- read.csv("fg_2019.csv")
fg_2019 <- fg_2019[,c("playerid","K.","BB.", "SwStr.")]
pitchers_2019 <- left_join(pitchers_2019,master[,c("mlb_id","fg_id")],by = c("player_id"= "mlb_id"))
pitchers_2019 <- pitchers_2019[,c("player_name","fg_id","player_id","IZ.Pitches","IZ.Swing","IZ.xSwing","IZ","OOZ.Pitches","OOZ.Swing","OOZ.xSwing", "OOZ", "PD")]
pitchers_2019$fg_id <- as.numeric(as.character(pitchers_2019$fg_id))
pitchers_2019 <- left_join(pitchers_2019,fg_2019, by = c("fg_id" = "playerid"))
pitchers_2019$K. = as.numeric(gsub("[\\%,]", "", pitchers_2019$K.))
pitchers_2019$BB. = as.numeric(gsub("[\\%,]", "", pitchers_2019$BB.))
pitchers_2019$SwStr. = as.numeric(gsub("[\\%,]", "", pitchers_2019$SwStr.))
whiff_predict <- all_pitches[,c("pitch_type",
"player_name",
"batter",
"pitcher",
"description",
"zone",
"stand",
"p_throws",
"balls",
"strikes",
"plate_x",
"plate_z")]
whiff_predict <- mutate(whiff_predict, whiff=ifelse(description %in% c("swinging_strike","swinging_strike_blocked"),
1, 0))
whiff_predict <- whiff_predict[!(is.na(whiff_predict$plate_x)) | !(is.na(whiff_predict$plate_z)),]
whiff_predict <- whiff_predict[!(is.na(whiff_predict$pitch_type)),]
whiff_predict <- mutate(whiff_predict, pitch_group=ifelse(pitch_type %in% c("FF", "FT","FC", "SI"),
"Fastball", ifelse(pitch_type %in% c("SL", "EP","CU", "KN", "KC"),
"Breaking", "OffSpeed")))
whiff_predict$count <- paste(whiff_predict$balls,"-",whiff_predict$strikes)
all_splits_whiff_predict <- split(whiff_predict, with(whiff_predict, interaction(pitch_group,count)), drop = TRUE)
all_predict_whiff_predict <- whiff_predict[FALSE,]
all_predict_whiff_predict$predict <- numeric()
predict_whiff <- function(x)
{
if(nrow(all_splits_whiff_predict[[x]]) > 100)
{
fit <- gam(whiff ~ s(plate_x,plate_z), family=binomial, data=all_splits_whiff_predict[[x]])
all_splits_whiff_predict[[x]]$predict <- exp(predict(fit,all_splits_whiff_predict[[x]]))/(1 + exp(predict(fit,all_splits_whiff_predict[[x]])))
all_predict_whiff_predict <- rbind(all_predict_whiff_predict,all_splits_whiff_predict[[x]])
}
}
whiff_predict_data <- lapply(1:length(all_splits_whiff_predict), predict_whiff)
whiff_predict_data <- do.call("rbind", whiff_predict_data)
model_whiff <- lmer(whiff ~ predict + (1|pitcher) + (1|batter),
data = whiff_predict_data)
whiff_pitchers <- data.frame(ranef(model_whiff)$pitcher)
colnames(whiff_pitchers) <- "xWhiff"
whiff_data <- whiff_predict_data %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(Pitches = n(),
Whiff = round(mean(whiff),5),
xWhiff = round(mean(predict),5)) %>%
filter(Pitches >= 750)
View(whiff_predict_data)
View(whiff_pitchers)
View(whiff_data)
whiff_data <- merge(whiff_data,whiff_pitchers, by.x = "pitcher", by.y = "row.names")
View(whiff_data)
whiff_pitchers <- data.frame(ranef(model_whiff)$pitcher)
colnames(whiff_pitchers) <- "In_Whiff"
whiff_data <- whiff_predict_data %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(Pitches = n(),
Whiff = round(mean(whiff),5),
xWhiff = round(mean(predict),5)) %>%
filter(Pitches >= 750)
whiff_data <- merge(whiff_data,whiff_pitchers, by.x = "pitcher", by.y = "row.names")
View(pitchers_2019)
summary(model_whiff)
whiff_pitchers <- data.frame(ranef(model_whiff)$pitcher)
colnames(whiff_pitchers) <- "In_Whiff"
whiff_data <- whiff_predict_data %>%
group_by(pitcher, player_name) %>%
arrange(pitcher, player_name) %>%
summarise(Pitches = n(),
Whiff = round(mean(whiff),5),
xWhiff = round(mean(predict),5)) %>%
filter(Pitches >= 500)
whiff_data <- merge(whiff_data,whiff_pitchers, by.x = "pitcher", by.y = "row.names")
